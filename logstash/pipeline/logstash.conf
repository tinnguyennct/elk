input {
        beats {
                port => 5044
        }
        tcp {
                port => 50000
        }
}

## Add your filters / logstash plugins configuration here
filter {
	if "ingress" in [tags] {
		grok {
			match => {
				"message" => "%{IP:remote_ip} - %{USER:user} \[%{HTTPDATE:timestamp}\] \"%{WORD:method} %{NOTSPACE:request_uri} %{NOTSPACE:http_version}\" %{NUMBER:status} %{NUMBER:body_bytes_sent} \"%{DATA:http_referer}\" \"%{DATA:http_user_agent}\" %{NUMBER:request_lenght} %{NUMBER:request_time:float} \[%{DATA:upstream_name}\] \[%{DATA:proxy_alternative_upstream_name}\] %{HOSTPORT:upstream_addr} %{NUMBER:reponse_length} %{NUMBER:reponse_time:float} %{NUMBER:response_status} %{GREEDYDATA:reqid}"
			}
		}
	
		geoip {
			source => "remote_ip"
		}
	}

	else {
		grok {
			match => {
				"message" => "%{IP:remote_ip} - %{USER:user} \[%{HTTPDATE:timestamp}\] \"%{WORD:method} %{NOTSPACE:request_uri} %{NOTSPACE:http_version}\" %{NUMBER:status} %{NUMBER:body_bytes_sent} \"%{DATA:http_referer}\" \"%{DATA:http_user_agent}\""
			}
		}
	}

	if "_geoip_lookup_failure" in [tags] {
		drop {}
	}
}

output {
    if "ingress" in [tags] {
		elasticsearch {
			hosts => "elasticsearch:9200"
			index => "ingress"
			user => "logstash_internal"
			password => "${LOGSTASH_INTERNAL_PASSWORD}"
		}
    }

    else if "kong" in [tags] {
        elasticsearch {
			hosts => "elasticsearch:9200"
			index => "kong"
			user => "logstash_internal"
			password => "${LOGSTASH_INTERNAL_PASSWORD}"
        }
    }

    else {
		elasticsearch {
			hosts => "elasticsearch:9200"
			index => "osm"
			user => "logstash_internal"
			password => "${LOGSTASH_INTERNAL_PASSWORD}"
        }
    }
}

